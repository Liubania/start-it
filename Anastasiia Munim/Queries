PRACTICE:

--1) Show all info about CompanyName and Address from the Customers table.

select company_name, Address from Customers


--2) Show all info about CompanyName and ContactPerson from the Suppliers table.

select company_name, contact_name from suppliers


--3) Show all info about ProductName and UnitPrice from the Products table.

select product_name, unit_price from products


--4) Show all info about LastName, FirstName, BirthDate and HireDate of Employees.

select last_name, first_name, birth_date, hire_date
from employees 

--5) Show all info about the employee with ID 8

select * from employees 
where employee_id =8

--6) Show the list of first and last names of the employees from London

select first_name, last_name, city from employees 
where city = 'London'

--7) Show the list of first, last names and ages of the employees whose age is greater than 55

select first_name, extract (year from age(birth_date))
from employees e 
where extract (year from age(birth_date)) >'55'

--8) Show the list of products with the price between 10 and 50

select product_name, unit_price  from products
where unit_price between '10' and '50'

--9) Show the list of products which names start form ‘N’ and average price is greater than 50.

SELECT product_name, AVG(unit_price) AS AveragePrice
FROM Products
WHERE product_name LIKE 'N%'
GROUP BY product_name 
HAVING AVG(unit_price) > 50

--10) Show the total number of employees which live in the same city.

select city, count(employee_id) as number from employees as employees_id
group by city

--11) Show the list of suppliers which name begins with letter ‘A’  and are situated in London.

select supplier_id, company_name, city  from suppliers
where company_name like 'A%' and city ='London'

--12) Show the list of first, last names and ages of the employees whose age is greater than average age of all employees.
--The result should be sorted by last name.

select first_name, last_name, extract(year from age(birth_date)) from employees
where
extract(year from age(birth_date)) > (select avg(extract(year from age(birth_date))) from employees)
order by last_name


--13) Calculate the count of customers from Mexico and contact signed as ‘Owner’.
select count(*) from customers
where city ='Mexico' and contact_title ='Owner'

--14) Write a query to get most expense and least expensive Product list (name and unit price).

select product_name, unit_price from products
order by unit_price desc
limit '1'

select product_name, unit_price from products
where unit_price = (select max(unit_price) from products)
order by unit_price desc																																																																																										


--least expensive 
select product_name, unit_price from products
order by unit_price
limit '1'

--15) Write a query to get Product list (name, unit price) of above average price.

select product_name, unit_price from products
where unit_price > (select avg(unit_price) from products)

--16) Write a query to get Product list (name, unit price) of ten most expensive products.
select product_name, unit_price from products
order by unit_price  desc 
LIMIT '10'

--17) For each employee that served the order (identified by EmployeeID), calculate a total Freight.

select count(freight) as total_freight, employee_id
from orders
group by employee_id

--18) Calculate the greatest, the smallest and the average age among the employees from London.

SELECT City,
    MAX(EXTRACT(YEAR FROM NOW()) - EXTRACT(YEAR FROM birth_date)) AS MaxAge,
    MIN(EXTRACT(YEAR FROM NOW()) - EXTRACT(YEAR FROM birth_date)) AS MinAge,
    AVG(EXTRACT(YEAR FROM NOW()) - EXTRACT(YEAR FROM birth_date)) AS AvgAge
FROM Employees
WHERE City = 'London'
GROUP BY City

--19) Calculate the greatest, the smallest and the average age of the employees for each city.

SELECT 
    City,
    MAX(EXTRACT(YEAR FROM NOW()) - EXTRACT(YEAR FROM birth_date)) AS MaxAge,
    MIN(EXTRACT(YEAR FROM NOW()) - EXTRACT(YEAR FROM birth_date)) AS MinAge,
    AVG(EXTRACT(YEAR FROM NOW()) - EXTRACT(YEAR FROM birth_date)) AS AvgAge
FROM Employees
GROUP BY City 


--20) Show the list of cities in which the average age of employees is greater than 60 (the average age is also to be shown)

SELECT City, AVG(EXTRACT(YEAR FROM NOW()) - EXTRACT(YEAR FROM birth_date)) AS AverageAge
FROM Employees
GROUP BY City
HAVING AVG(EXTRACT(YEAR FROM NOW()) - EXTRACT(YEAR FROM birth_date)) > 60 


--21) Show the first and last name(s) of the eldest employee(s).

select first_name, last_name from employees
where birth_date = (select max (birth_date) from employees) 

--22) Show first, last names and ages of 3 eldest employees.

select first_name, last_name, birth_date from employees
order by birth_date desc 
limit '3'


----------------------------------------------------------------
HOMEWORK:

--1)Write a query to get Product name and quantity/unit.

select product_name, quantity_per_unit 
from products 

--2)Write a query to get current Product list (Product ID and name).

select product_id, product_name 
from products

--3)Write a query to get discontinued Product list (Product ID and name).

select product_id, product_name, discontinued 
from products
 

--4)Write a query to get most expense and least expensive Product list (name and unit price).

select product_name, unit_price from products
where unit_price = (select max(unit_price) from products)
order by unit_price desc																																																																																										


--least expensive 
select product_name, unit_price from products
order by unit_price asc 
limit '1'

--5)Write a query to get Product list (id, name, unit price) where current products cost less than $20.

select product_id, product_name, unit_price 
from products
where unit_price <20

--6)Write a query to get Product list (id, name, unit price) where products cost between $15 and $25.

select product_id, product_name, unit_price 
from products
where unit_price between 15 and 25

--7)Write a query to get Product list (name, unit price) of above average price.

select product_name, unit_price 
from products
where unit_price >(select avg(unit_price)from products)

--8)Write a query to get Product list (name, unit price) of ten most expensive products.

select product_name, unit_price  
from products
order by unit_price desc 
limit 10

--9)Write a query to count current and discontinued products.

select * from products
where discontinued =1

select *from products
where discontinued =0


--10)Write a query to get Product list (name, units on order , units in stock) of stock is less than the quantity on order. 

select product_name, units_on_order, units_in_stock 
from products
where units_in_stock <units_on_order

